# Environments
# ------------
#
# * cmd
#       Run the command line interface (`python -m flake8_aaa`) on all good
#       example files. Expect no errors and no non-zero error codes.
# * cmdbad
#       Run all bad examples through command line interface and ensure an error
#       code is returned for every one.
# * doc
#       Emulate the documentation build on RTD.
# * examples
#       Check all examples, good and bad. Includes linting with vanilla Flake8
#       and assert tests formatted with Black pass. All (working) examples
#       executed with vanilla pytest.
# * examples_aaa
#       Ensures that all examples work against Flake8-AAA as expected. Good
#       examples are green. Bad examples are linted and the output asserted to
#       match expected.
# * install
#       Assert that plugin can be installed and run via flake8 in a clean venv.
#       Flake8 is called with flake8-aaa installed to lint flake8-aaa's tests
#       (dog fooding) Test requirements do not include flake8-aaa, latest
#       version is installed by tox during testing.
# * lint
#       "Internal" linting and formatting on the codebase and tests. Not run
#       with Flake8-aaa installed (that happens in "install" env). Does not
#       check examples (that happens in "examples" and "examples_aaa" envs).
# * test
#       Run pytest on test suite.

[tox]
envlist = py3{7,8,9,10}-{install,lint,examples,examples_aaa,test,cmd,cmdbad},py310-doc

[testenv]
deps =
    doc,lint,test: -rrequirements/base.txt
    doc,lint,test: -rrequirements/test.txt
    examples: -rrequirements/examples.txt
    examples_aaa: flake8>=4
    install: flake8>=4
commands =
    cmd: make cmd
    cmdbad: make cmdbad
    doc: make doc
    examples: {[examples]commands}
    py3{8,9}-examples: {[py38-examples]commands}
    examples_aaa: {[examples_aaa]commands}
    install: {[install]commands}
    lint: make lint
    test: pytest {posargs:tests}
skip_install =
    lint: true
    examples: true
setenv =
    PYTHONWARNINGS = default
    TOXDIR = {envdir}
allowlist_externals =
    bash
    diff
    make

# --- Env commands ---

[install]
commands =
    flake8 --version
    flake8 tests

[examples]
commands =
    make lintexamples
    pytest \
        examples/good/test_comments.py \
        examples/good/test_with_statement.py \
        examples/good/test_with_statement_unittest.py \
        examples/bad/test_aaa03.py \
        examples/bad/test_aaa03_04.py \
        examples/bad/test_aaa04.py \
        examples/bad/test_aaa06.py

[py38-examples]
# Add extra checks on Python 3.8 (and later) files
commands =
    make lintexamplespy38
    pytest examples/good_py38/test_assignment_operator.py

[examples_aaa]
commands =
    flake8 --version
    flake8 examples/good
    - bash -c "flake8 examples/bad/ | sort > {envtmpdir}/out"
    - bash -c "sort examples/bad/bad_expected.out > {envtmpdir}/expected_out"
    diff {envtmpdir}/out {envtmpdir}/expected_out

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
